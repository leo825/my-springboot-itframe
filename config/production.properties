logging.config = logging-config:classpath:log4j.properties
logging.file-web=app.log
logging.file-core=core.log

spring.aop.proxy-target-class = aop-proxy-target: false
spring.aop.auto = aop-auto:false

#-- 应用服务器配置
#-- 内嵌的WEB应用服务器监听端口
server.port=port:18080
#-- 内嵌的WEB应用服务器监听地址
server.address=address:0.0.0.0
#-- 应用上下文路径
server.context-path=context-path:/edcaiom
#-- 接收新连接的队列大小最大值
server.tomcat.accept-count=accept-count:10
#-- 并发处理的最大线程数
server.tomcat.max-threads=max-threads:100
#-- 同时并发处理的最大连接数
server.tomcat.max-connections=max-conns:100
#-- tomcat base dir
server.tomcat.basedir=tmp
#-- tomcat access log配置
#-- 存放路径
server.tomcat.accesslog.directory=${user.dir}/logs
#-- 文件前缀，生成后为：前缀.日期.log
server.tomcat.accesslog.prefix=app_access_log
#-- Dubbo相关配置
#-- Dubbo服务端监听端口
dubbo.provider.port=dubbo-port:20880
#-- dubbo生产者的应用标识
dubbo.provider.application-name=dubbo-appname:edcaiom-provider
#-- dubbo生产者：默认的服务超时时间，单位：毫秒
dubbo.provider.timeout=dubbo-timeout:10000
dubbo.provider.registry-address=dubbo-zk:zookeeper://
dubbo.provider.annotation-package = dubbo-pkg:com.cmos.edcaiom.service

#-- Dubbo服务注册与发现的zookeeper集群地址
dubbo.consumer.registry-address=dubbo-zk:zookeeper://
#-- dubbo消费者的应用标识
dubbo.consumer.application-name=dubbo-appname:edcaiom-consumer
#-- dubbo消费者：对应的dubbo生产者服务地址
dubbo.consumer.reference-url=dubbo-ref:
#-- dubbo消息者：默认的服务访问超时时间，单位：毫秒
dubbo.consumer.timeout=dubbo-timeout:10000
dubbo.consumer.annotation-package = dubbo-pkg:com.cmos.edcaiom.web

#-- 远程调用HTTP连接池配置
#-- 连接池最大连接数，建议为单个tomcat最大并发的1/3~2/3
httpclient.maxTotal = 100  
#-- 连接池全局默认socket读取超时，单位为毫秒，如果存在大文件流，建议调大
httpclient.socketTimeout = 5000 

#-- 日志中心配置
#-- 日志中心开关
logger.switch.enable-control=true
logger.switch.enable-core=true
#-- 日志调试开关
logger.debug.enable-control=false
logger.debug.enable-core=false
#-- 日志级别
logger.log.level-control=info
logger.log.level-core=info
#-- 日志发送方式，部署在核心域和接口域使用kafka方式，互联网域使用file方式。
logger.msg.sender-control=kafka
logger.msg.sender-core=kafka
#-- kafka地址，根据部署环境进行选择配置
#-- 系統日志
logger.kafka.brokerlist=kafka.log.core.cmos:9092
#-- 应用kafka集群 实名制专属（vertica，实时监控数据等）
logger.userkafka.brokerlist=192.168.187.77:6667,192.168.187.78:6667,192.168.187.79:6667

#-- ONEST配置
ONEST.ENDPOINT=http://192.168.150.243:80
ONEST.UID=edcbusi
ONEST.DISPLAY-NAME=prdedcbusi
ONEST.ACCESS-KEY=D1V936ELRF9B4LV4WPUF
ONEST.SECRET-KEY=enO8NvYuSSVnrMMtbkcZxVMQuvGAuyS0xos54ONm
ONEST.gztfile.userId=edcgzt
ONEST.gztFile.bucketName=prd-edcgzt
ONEST.busiFile.bucketName.P=prd-edcbusi
ONEST.busiFile.bucketName.W=prd-edcpaperless
ONEST.busiFile.bucketName.V=prd-edcvideo

#-- csf配置
#-- csf服务zookeeper地址，多个地址用逗号(,)隔开
csf.zkServer.list=192.168.100.144:2181
#-- 缓存中心配置
#-- redis地址
aiomcache.redisAddress=redis1.edcaiom.smrz.core.cmos:10103,redis2.edcaiom.smrz.core.cmos:10103,redis3.edcaiom.smrz.core.cmos:10103,redis4.edcaiom.smrz.core.cmos:10103,redis5.edcaiom.smrz.core.cmos:10103,redis6.edcaiom.smrz.core.cmos:10103
authcache.redisAddress=redis1.edcauth.smrz.core.cmos:10105,redis2.edcauth.smrz.core.cmos:10105,redis3.edcauth.smrz.core.cmos:10105,redis4.edcauth.smrz.core.cmos:10105,redis5.edcauth.smrz.core.cmos:10105,redis6.edcauth.smrz.core.cmos:10105

# 默认数据源
db.default = base

#-- 数据源配置
base.driverClassName=com.mysql.jdbc.Driver
base.url=jdbc:mysql://192.168.156.232:20830/edcaiom?useUnicode=true&characterEncoding=utf8
base.username=edcaiom
base.password=rO0ABXcyACBB4Y5Tu/AjRxNkG8lgjhGoqXdAK9RHRGYZjUUVvNlsBAR8J4fJxe2jdC4dY5aKL/M=
base.initialSize=2

# 自定义初始单
spring.app.initializers = inits:

#远程调用地址
remote.url.edcacms = http://edcacms.smrz.cmos:30003/edcacms
remote.url.edccommon =http://edccommon.smrz.cmos:30004/edccommon
remote.url.edcorder =http://edcorder.smrz.cmos:30022/edcorder
remote.url.edcvideo =http://edcvideo.smrz.cmos:30025/edcvideo
#edcsms只有互联网域
remote.url.edcadapi = http://edcadapi-hx.smrz.cmos:30014/edcadapi
remote.url.edcsms = http://edcsms.smrz.cmos:30003/edcsms
remote.url.edcadapi.out = http://edcadapi.smrz.cmos:30001/edcadapi
remote.url.edcwork = http://192.168.150.244:30036/edcwork
remote.url.edcauth = http://192.168.150.244:30037/edcauth

